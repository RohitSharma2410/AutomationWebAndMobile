<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-31T14:21:58 IST" name="Surefire suite" finished-at="2025-01-31T14:22:20 IST" duration-ms="21319">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Selenium.Cucumber.RunCucumberTest@5f049ea1]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-01-31T14:21:58 IST" name="Surefire test" finished-at="2025-01-31T14:22:20 IST" duration-ms="21319">
      <class name="Selenium.Cucumber.RunCucumberTest">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:Selenium.Cucumber.RunCucumberTest@5f049ea1]" started-at="2025-01-31T14:21:58 IST" name="setUpClass" finished-at="2025-01-31T14:21:59 IST" duration-ms="236" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4bff7da0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Selenium.Cucumber.RunCucumberTest@5f049ea1]" started-at="2025-01-31T14:21:59 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-31T14:22:12 IST" duration-ms="13331" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate ABTesting page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["All Possible Situations"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Selenium.Cucumber.RunCucumberTest@5f049ea1]" started-at="2025-01-31T14:21:59 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-31T14:22:12 IST" duration-ms="13748" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate basicAuth page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["All Possible Situations"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Selenium.Cucumber.RunCucumberTest@5f049ea1]" started-at="2025-01-31T14:21:59 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-31T14:22:17 IST" duration-ms="18381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate DragDrop page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["All Possible Situations"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Selenium.Cucumber.RunCucumberTest@5f049ea1]" started-at="2025-01-31T14:21:59 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-31T14:22:13 IST" duration-ms="14028" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate AddRemove elements page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["All Possible Situations"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Selenium.Cucumber.RunCucumberTest@5f049ea1]" started-at="2025-01-31T14:21:59 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-31T14:22:12 IST" duration-ms="13604" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate ContextMenu elements page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["All Possible Situations"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Selenium.Cucumber.RunCucumberTest@5f049ea1]" started-at="2025-01-31T14:21:59 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-31T14:22:19 IST" duration-ms="20801" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate ChallengingDOM elements page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["All Possible Situations"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Selenium.Cucumber.RunCucumberTest@5f049ea1]" started-at="2025-01-31T14:21:59 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-31T14:22:15 IST" duration-ms="16083" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate BrokenImages page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["All Possible Situations"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at Selenium.Cucumber.StepDefinitions.validate_all_of(StepDefinitions.java:94)
at âœ½.Validate all of response for "AllImageesLink" should be {200}(file:///Users/rohitsharma/eclipse-workspace/MyAutomationProject/src/test/resources/Selenium/Cucumber/HandleDifferentCases.feature:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Selenium.Cucumber.RunCucumberTest@5f049ea1]" started-at="2025-01-31T14:22:19 IST" name="tearDownClass" finished-at="2025-01-31T14:22:20 IST" duration-ms="262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Selenium.Cucumber.RunCucumberTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
